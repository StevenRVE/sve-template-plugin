/* //do calc

for (amount of steps)
    if pulse
        buffer[AUDIO FRAME VALUE FOR ] = 1;


for audio frame
    if buffer[frameInSequence] == 1
        note on

    if frameInSequence > totalBufferSize
        frameInSequence = 0;
    else
        frameInSequence++;
*/

Plugin class:
- bevat alle DPF functies
    - constructor
    - destructor
    - getLabel
    - getDescription
    - getMaker
    - getHomePage
    - getLicense
    - getVersion
    - getUniqueId
    - initParameter
    - getParameterValue
    - setParameterValue
    - sampleRateChanged
    - activate
    - run
- bevat de parameters in een enum en parameter values in een array
    - steps
    - pulses
    - rotation
    - velocity
    - (division)
    - (reverse toggle)
    - (eventuele andere parameters)
- bevat een object van de Sequencer class

Sequencer:
- bevat de euclideanSequence()
- is een observer van de clock class
- bevat een object van de RingBuffer class
- bevat alle setters en getters voor alle parameters
- process: dit is de DISTHRO::Plugin::run() maar dan binnen voor de sequencer processen

Clock class:
- doet alle tijdcommunicatie met de host
- (kan later ook de locale BPM doen)

RingBuffer class:
- wordt gebruikt om te kijken wanneer er een midi note afgespeeld moet worden
- buffer wordt aangemaakt met maximaal mogelijke lengte voor een buffer, vervolgens
  wordt de warpHead verplaatst aan de hand van de daadwerkelijke grote van de buffer
  (min steps = 0, max steps = 16)
